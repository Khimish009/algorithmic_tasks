https://leetcode.com/problems/unique-number-of-occurrences/description/?envType=study-plan-v2&envId=leetcode-75

Given an array of integers arr, return true if the number of occurrences of each value in the array is 
unique or false otherwise.

Example 1:
Input: arr = [1,2,2,1,1,3]
Output: true
Explanation: The value 1 has 3 occurrences, 2 has 2 and 3 has 1. No two values have the same number of 
occurrences.

Example 2:
Input: arr = [1,2]
Output: false

Example 3:
Input: arr = [-3,0,1,-3,1,1,1,-3,10,0]
Output: true

Constraints:
1 <= arr.length <= 1000
-1000 <= arr[i] <= 1000

Solution:
var uniqueOccurrences = function(arr) {
    const hashMap = new Map()
    const set = new Set()

    for(const item of arr) {
        if(hashMap.has(item)) {
            hashMap.set(item, hashMap.get(item) + 1)
        } else {
            hashMap.set(item, 1)
        }
    }

    for(const value of hashMap.values()) {
        if(set.has(value)) {
            return false
        }

        set.add(value)
    }

    return true
};


Solution #2:
var uniqueOccurrences = function(arr) {
    const hashMap = {}

    for (let item of arr) {
        if (!(item in hashMap)) {
            hashMap[item] = 0
        }

        hashMap[item]++
    }

    const values = Object.values(hashMap)

    return values.length === new Set(values).size
};