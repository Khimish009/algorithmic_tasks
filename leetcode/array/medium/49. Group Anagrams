https://leetcode.com/problems/group-anagrams/description/

Given an array of strings strs, group the anagrams together. You can return the answer in any order.An Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.

Example 1:
Input: strs = ["eat","tea","tan","ate","nat","bat"]
Output: [["bat"],["nat","tan"],["ate","eat","tea"]]

Example 2:
Input: strs = [""]
Output: [[""]]

Example 3:
Input: strs = ["a"]
Output: [["a"]]

Constraints:
1 <= strs.length <= 104
0 <= strs[i].length <= 100
strs[i] consists of lowercase English letters.

var groupAnagrams = function(strs) {
    const hash = {}

    for (const str of strs) {
        const count = new Array(26).fill(0)

        for(letter of str) {
            count[letter.charCodeAt() - 97]++
        }

        if(!(count in hash)) {
            hash[count] = [str]
        } else {
            hash[count].push(str)
        }
    }

    return Object.values(hash)
};

Solution:
var groupAnagrams = function(strs) {
    const hash = {}

    for (const str of strs) {
        const sortedStr = str.split('').sort().join('')

        if (!(sortedStr in hash)) {
        hash[sortedStr] = []
        }

        hash[sortedStr] = [...hash[sortedStr], str]
    }

    return Object.values(hash)
};
