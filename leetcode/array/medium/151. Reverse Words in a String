https://leetcode.com/problems/reverse-words-in-a-string/description/?envType=study-plan-v2&envId=leetcode-75

Given an input string s, reverse the order of the words. A word is defined as a sequence of non-space 
characters. The words in s will be separated by at least one space. Return a string of the words in 
reverse order concatenated by a single space. Note that s may contain leading or trailing spaces or 
multiple spaces between two words. The returned string should only have a single space separating the 
words. Do not include any extra spaces.

Example 1:
Input: s = "the sky is blue"
Output: "blue is sky the"

Example 2:
Input: s = "  hello world  "
Output: "world hello"
Explanation: Your reversed string should not contain leading or trailing spaces.

Example 3:
Input: s = "a good   example"
Output: "example good a"
Explanation: You need to reduce multiple spaces between two words to a single space in the reversed string.
 
Constraints:
1 <= s.length <= 104
s contains English letters (upper-case and lower-case), digits, and spaces ' '.
There is at least one word in s.

Follow-up: If the string data type is mutable in your language, can you solve it in-place with O(1) extra space?

Solution:
var reverseWords = function(s) {
    let result = ''
    const arr = Array.from(s.split(' '))

    for(let i = arr.length - 1; i >= 0; i--) {
        if(arr[i] === '') continue
        if(result.length !== 0) result += ' '
        result += arr[i]
    }

    return result
}

Solution:
var reverseWords = function(s) {
    let words = ''
    let result = []

    for(let i = 0; i < s.length; i++) {
        if(s.charAt(i) === ' ') {
            words.length > 0 && result.unshift(words)
            words = ''
        } else {
            words += s.charAt(i)
        }
    }

    words.length > 0 && result.unshift(words)
    return result.join(' ')
};

Solution:
var reverseWords = function(s) {
    const words = s.match(/\w+/gi)

    return words.reverse().join(' ')
};
