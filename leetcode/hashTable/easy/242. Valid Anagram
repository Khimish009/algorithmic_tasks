https://leetcode.com/problems/valid-anagram/

Given two strings s and t, return true if t is an anagram of s, and false otherwise. An Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.

Example 1:
Input: s = "anagram", t = "nagaram"
Output: true

Example 2:
Input: s = "rat", t = "car"
Output: false
 
Constraints:
1 <= s.length, t.length <= 5 * 104
s and t consist of lowercase English letters.
 
Follow up: What if the inputs contain Unicode characters? How would you adapt your solution to such a case?

Solution: Time O(n), Space O(n)
var isAnagram = function(s, t) {
    const hashMap = new Map()

    if(s.length !== t.length) return false

    for(let i = 0; i < s.length; i++) {
        hashMap.set(s[i], (hashMap.get(s[i]) || 0) + 1)
        hashMap.set(t[i], (hashMap.get(t[i]) || 0) - 1)
    }

    for(const value of hashMap.values()) {
        if(value !== 0) {
            return false
        }
    }

    return true
};
